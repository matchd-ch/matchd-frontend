on:
  workflow_call:
    inputs:
      namespace:
        required: true
        type: string
      release:
        required: true
        type: string
      environment:
        required: true
        type: string
      regularReplicaCount:
        default: 1
        type: number
      stableReplicaCount:
        default: 0
        type: number
      version:
        default: "${{ github.sha }}"
        type: string
      domain:
        required: true
        type: string
      letsencryptEnabled:
        type: boolean
        default: false
      monitoringEnabled:
        type: boolean
        default: false
      autoscalingEnabled:
        type: boolean
        default: false
      gtmEnabled:
        type: boolean
        default: false
      gtmDebug:
        type: boolean
        default: false
      task:
        type: string
        default: install
      apiUrl:
        type: string
        required: true
    secrets:
      DOCKER_PULL_USERNAME:
        required: true
      DOCKER_PULL_SECRET:
        required: true
      GTM_CONTAINER_ID:
        required: true
      SENTRY_DSN:
        required: true

jobs:
  deploy_review:
    name: "Helm"

    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          project_id: "joshmartin-cluster"

      - name: "Prepare Helm Chart"
        run: "helm dependency update .helm/chart/"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0.7.1"
        with:
          workload_identity_provider: "projects/182803428686/locations/global/workloadIdentityPools/github/providers/github"
          service_account: "matchd-deployer@joshmartin-cluster.iam.gserviceaccount.com"

      - id: "get-credentials"
        uses: "google-github-actions/get-gke-credentials@v0.7.0"
        with:
          cluster_name: "joshmartin-cluster"
          location: "europe-west6-a"

      - name: "Create Pull Secret"
        if: ${{ inputs.task != 'remove' }}
        run: |
          kubectl create secret --namespace="${{ inputs.namespace }}" \
            docker-registry \
            "${{ inputs.release }}-pull" \
            --docker-server="ghcr.io" \
            --docker-username="${{ secrets.DOCKER_PULL_USERNAME }}" \
            --docker-password="${{ secrets.DOCKER_PULL_SECRET }}" \
            --output=yaml \
            --dry-run=client \
            | kubectl \
              replace \
              --namespace="${{ inputs.namespace }}" \
              --force \
              --filename=-

      - name: "Deploy"
        # TODO: Switch back to deliverybot/helm@v1 as soon as the following PR is merged and released:
        # - https://github.com/deliverybot/helm/pull/68
        uses: "Velocity-Engineering/helm@cc5fac2c25dd983ac00d6dcb2cbaebc96c18e6ce"
        with:
          task: "${{ inputs.task }}"
          release: "${{ inputs.release }}"
          namespace: "${{ inputs.namespace }}"
          helm: helm3
          version: "${{ inputs.version }}"
          chart: ".helm/chart"
          token: "${{ github.token }}"
          values: |
            deployment:
              variants:
                regular:
                  replicaCount: ${{ inputs.regularReplicaCount }}
                  autoscaling:
                    enabled: ${{ inputs.autoscalingEnabled }}
                stable:
                  replicaCount: ${{ inputs.stableReplicaCount }}
                  autoscaling:
                    enabled: ${{ inputs.autoscalingEnabled }}
            version: ${{ inputs.version }}
            environment: ${{ inputs.environment }}
            name: ${{ inputs.release }}
            image:
              repository: ghcr.io/${{ github.repository }}
              tag: ${{ inputs.version }}
              secrets:
                - name: "${{ inputs.release }}-pull"
            ingress:
              domain: ${{ inputs.domain }}
              letsencrypt: ${{ inputs.letsencryptEnabled }}
              monitoring: ${{ inputs.monitoringEnabled }}
            env:
              BASE_URL: "/"
              API_URL: "${{ inputs.apiUrl }}"
              DATA_PROTECTION_URL: "https://matchd.ch/impressum-datenschutz/"
              GTM_ENABLED: "${{ inputs.gtmEnabled }}"
              GTM_DEBUG: "${{ inputs.gtmDebug }}"
              GTM_CONTAINER_ID: "${{ secrets.GTM_CONTAINER_ID }}"
              SENTRY_DSN: "${{ secrets.SENTRY_DSN }}"
              SENTRY_ENVIRONMENT: "${{ inputs.environment }}"
              SENTRY_RELEASE: "${{ inputs.version }}"
