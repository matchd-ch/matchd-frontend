on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "main"
    tags:
      - "v*"

# Secrets:
# * CACHE_VERSION - Set to `date +%s`, set new when the cache should be busted

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DEFAULT_NODEJS_VERSION: 16.13.1

jobs:
  test:
    name: "Tests"

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.DEFAULT_NODEJS_VERSION }}"

      - id: cache-npm
        uses: actions/cache@v2.1.7
        with:
          path: ~/.npm
          key: npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run test suite
        run: npm run test:unit

  lint:
    name: "Lint"

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.DEFAULT_NODEJS_VERSION }}"

      - id: cache-npm
        uses: actions/cache@v2.1.7
        with:
          path: ~/.npm
          key: npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run Linter
        run: npm run lint -- --no-fix

  build:
    name: "Build"

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup NodeJS
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ env.DEFAULT_NODEJS_VERSION }}"

      - id: cache-npm
        uses: actions/cache@v2.1.7
        with:
          path: ~/.npm
          key: npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run Build
        run: npm run build

      - run: tar -czvf dist.tar.gz dist
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist.tar.gz

  docker_build:
    name: "Docker Build"

    runs-on: ubuntu-latest

    needs: ['build']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: .
      - run: tar -zxvf dist.tar.gz
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF/refs\/heads\//}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            docker-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-
            docker-${{ runner.os }}-
            docker-
      - run: |
          docker \
            build \
            --tag ghcr.io/${{ github.repository }}:$GITHUB_SHA \
            .
      - run: docker push ghcr.io/${{ github.repository }}:$GITHUB_SHA
        if: github.event_name == 'push' && steps.branch_name.outputs.SOURCE_BRANCH == 'main'
      - run: docker tag ghcr.io/${{ github.repository }}:$GITHUB_SHA ghcr.io/${{ github.repository }}:${{ steps.branch_name.outputs.SOURCE_TAG }}
        if: github.event_name == 'push' && startsWith(steps.branch_name.outputs.SOURCE_TAG, 'v')
      - run: docker push ghcr.io/${{ github.repository }}:${{ steps.branch_name.outputs.SOURCE_TAG }}
        if: github.event_name == 'push' && startsWith(steps.branch_name.outputs.SOURCE_TAG, 'v')

  automerge_dependabot:
    name: "Automerge Dependabot PRs"

    runs-on: ubuntu-latest

    needs: ["test", "lint", "build", "docker_build"]

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Major Updates need to be merged manually
          target: minor
