on:
  workflow_call:
    outputs:
      tag:
        description: "The builded image repository tag"
        value: "${{jobs.docker_build.outputs.tag }}"

name: "Build"

# Secrets:
# * CACHE_VERSION - Set to `date +%s`, set new when the cache should be busted

env:
  DEFAULT_NODEJS_VERSION: 16.13.1

jobs:
  build:
    name: "Build Assets"

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup NodeJS
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: "${{ env.DEFAULT_NODEJS_VERSION }}"

      - id: cache-npm
        uses: actions/cache@v3.0.2
        with:
          path: ~/.npm
          key: npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run Build
        run: npm run build

      - run: tar -czvf dist.tar.gz dist
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist.tar.gz

  docker_build:
    name: "Docker Build"

    runs-on: ubuntu-latest

    needs: ["build"]

    outputs:
      tag: "${{ steps.branch_name.outputs.SOURCE_TAG }}"

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: .
      - run: tar -zxvf dist.tar.gz
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF/refs\/heads\//}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF/refs\/tags\//}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            docker-${{ runner.os }}-${{ hashFiles('Dockerfile') }}-
            docker-${{ runner.os }}-
            docker-
      - run: |
          docker \
            build \
            --tag ghcr.io/${{ github.repository }}:$GITHUB_SHA \
            .
      - run: docker push ghcr.io/${{ github.repository }}:$GITHUB_SHA
      - run: docker tag ghcr.io/${{ github.repository }}:$GITHUB_SHA ghcr.io/${{ github.repository }}:${{ steps.branch_name.outputs.SOURCE_TAG }}
        if: github.event_name == 'push' && startsWith(steps.branch_name.outputs.SOURCE_TAG, 'v')
      - run: docker push ghcr.io/${{ github.repository }}:${{ steps.branch_name.outputs.SOURCE_TAG }}
        if: github.event_name == 'push' && startsWith(steps.branch_name.outputs.SOURCE_TAG, 'v')
