variables:
  DOCKER_COMPOSE_SCRIPT: ./.oriented/run-docker-compose

image: node:12

cache:
  paths:
    - node_modules/

stages:
  - "Install"
  - "Prepare"
  - "Test"
  - "Build"
  - "Deploy"

install:
  stage: "Install"
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules
  only:
    - branches
    - tags
  tags:
    - docker-nonswiss-ok
  interruptible: true

test:unit:
  stage: Test
  script:
    - npm run test:unit
  dependencies:
    - install
  only:
    - branches
    - tags
  tags:
    - docker-nonswiss-ok
  interruptible: true

.npm_job:
  image: node:latest
  before_script:
    - npm config set cache $CI_PROJECT_DIR/.ci-npm-cache

.npm_job_build:
  extends: .npm_job
  script:
    - npm run build
    - npm run build:server
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_SLUG}-npm-build"
    paths:
      - dist
    expire_in: 180min
  stage: "Prepare"
  dependencies:
    - install
  tags:
    - docker
    - swiss
    - docker-privileged # workaround to avoid the flaky roadrunner-lxc-03
  interruptible: true

prepare:development:
  extends: .npm_job_build
  variables:
    VUE_APP_DOMAIN: $DEVELOPMENT_VUE_APP_DOMAIN
    VUE_APP_API: $DEVELOPMENT_VUE_APP_API
  only:
    - develop
  resource_group: development

prepare:integration:
  extends: .npm_job_build
  variables:
    VUE_APP_DOMAIN: $INTEGRATION_VUE_APP_DOMAIN
    VUE_APP_API: $INTEGRATION_VUE_APP_API
  only:
    refs:
      - /^v?\d+\.\d+\.\d+(?:-(?:alpha|beta|rc)(?:(?:(?:\+|\.)[a-zA-Z0-9-]+)*)?)$/
  resource_group: integration

prepare:production:
  extends: .npm_job_build
  variables:
    VUE_APP_DOMAIN: $PRODUCTION_VUE_APP_DOMAIN
    VUE_APP_API: $PRODUCTION_VUE_APP_API
  only:
    refs:
      - /^v?\d+\.\d+\.\d+$/
  resource_group: production

.build:
  stage: "Build"
  image: docker:19.03.11
  services:
    - docker:19.03.11-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - >
      docker build
      -t "$CI_REGISTRY/matchd/frontend:node-$APP_TAG"
      -f ".oriented/node.Dockerfile" .
    - docker push $CI_REGISTRY/matchd/frontend:node-$APP_TAG
    - >
      docker build
      -t "$CI_REGISTRY/matchd/frontend:nginx-$APP_TAG"
      --build-arg PROXY_URL="$PROXY_URL"
      -f ".oriented/nginx.Dockerfile" .
    - docker push $CI_REGISTRY/matchd/frontend:nginx-$APP_TAG
    - docker logout $CI_REGISTRY
  tags:
    - docker
    - docker-nonswiss-ok
    - not-roadrunner

build:development:
  extends: .build
  variables:
    ENVIRONMENT: development
    APP_TAG: latest
    PROXY_URL: http://app-development:4000
  dependencies:
    - prepare:development
  only:
    - develop
  resource_group: development

build:integration:
  extends: .build
  variables:
    ENVIRONMENT: integration
    APP_TAG: $CI_COMMIT_REF_NAME
    PROXY_URL: http://app-integration:4000
  dependencies:
    - prepare:integration
  only:
    refs:
      - /^v?\d+\.\d+\.\d+(?:-(?:alpha|beta|rc)(?:(?:(?:\+|\.)[a-zA-Z0-9-]+)*)?)$/
  resource_group: integration

build:production:
  extends: .build
  variables:
    ENVIRONMENT: production
    APP_TAG: $CI_COMMIT_REF_NAME
    PROXY_URL: http://app-production:4000
  dependencies:
    - prepare:production
  only:
    refs:
      - /^v?\d+\.\d+\.\d+$/
  resource_group: production

.deploy:
  stage: "Deploy"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ${DOCKER_COMPOSE_SCRIPT}
    - docker logout $CI_REGISTRY

deploy:development:
  extends: .deploy
  dependencies:
    - build:development
  variables:
    ENVIRONMENT: development
    IMAGE_FRONTEND: $CI_REGISTRY/matchd/frontend:node-latest
    IMAGE_FRONTEND_NGINX: $CI_REGISTRY/matchd/frontend:nginx-latest
    VUE_APP_DOMAIN: $DEVELOPMENT_VUE_APP_DOMAIN
    VUE_APP_API: $DEVELOPMENT_VUE_APP_API
  only:
    - develop
  tags:
    - matchd
    - development
  resource_group: development

deploy:integration:
  extends: .deploy
  dependencies:
    - build:integration
  variables:
    ENVIRONMENT: integration
    IMAGE_FRONTEND: $CI_REGISTRY/matchd/frontend:node-$CI_COMMIT_REF_NAME
    IMAGE_FRONTEND_NGINX: $CI_REGISTRY/matchd/frontend:nginx-$CI_COMMIT_REF_NAME
    VUE_APP_DOMAIN: $INTEGRATION_VUE_APP_DOMAIN
    VUE_APP_API: $INTEGRATION_VUE_APP_API
  only:
    refs:
      - /^v?\d+\.\d+\.\d+(?:-(?:alpha|beta|rc)(?:(?:(?:\+|\.)[a-zA-Z0-9-]+)*)?)$/
  tags:
    - matchd
    - integration
  resource_group: integration

deploy:production:
  extends: .deploy
  dependencies:
    - build:production
  variables:
    ENVIRONMENT: production
    IMAGE_FRONTEND: $CI_REGISTRY/matchd/frontend:node-$CI_COMMIT_REF_NAME
    IMAGE_FRONTEND_NGINX: $CI_REGISTRY/matchd/frontend:nginx-$CI_COMMIT_REF_NAME
    VUE_APP_DOMAIN: $PRODUCTION_VUE_APP_DOMAIN
    VUE_APP_API: $PRODUCTION_VUE_APP_API
  only:
    refs:
      - /^v?\d+\.\d+\.\d+$/
  tags:
    - matchd
    - production
  resource_group: production
